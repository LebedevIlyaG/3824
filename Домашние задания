Блок 1

1.1. Рациональное число

Разработать класс Рациональное число.
Класс должен хранить корректные дроби (знаменатель не равен 0) и выполнять с ними 4 стандартные арифметические операции. Дробь должна храниться в несократимом виде.
Класс должен содержать необходимые конструкторы, а также «уметь» выводить себя на консоль.

1.2. Длинное число

Разработать класс Длинное число.
Класс должен хранить знаковые целые числа длиной 64 бита, используя для этого целый тип int (unsigned int) длиной 32 бита.
Класс должен предоставлять 5 стандартных арифметических операций для целых чисел, сохраняя ту же семантику обработки переполнения, что и для типа int.
Класс должен содержать необходимые конструкторы, а также «уметь» выводить себя на консоль.

1.3. Время

Разработать класс Время.
Класс должен хранить время в формате: часы, минуты, секунды (в диапазоне от 0 часов 0 минут 0 секунд до 23 часа 59 минут 59 секунд).
Класс должен предоставлять операции: 1) установить время, 2) узнать время, 3) вычислить разницу между заданным временем и установленным (в часах, минутах и секундах), 4) сдвинуть время на заданное смещение (в часах, минутах и секундах) в меньшую и в большую сторону.
Класс должен содержать необходимые конструкторы, а также «уметь» выводить себя на консоль.

1.4. Конвертер длин

Разработать класс Конвертер длин.
Класс должен хранить длину в метрах и предоставлять методы по ее преобразованию в другие единицы измерения (например, фут, ярд, аршин, сажень, …).
Класс должен предоставлять операции: 1) установить текущую длину в метрах, 2) узнать текущую длину в метрах, 3) узнать текущую длину в выбранной единице измерения (из списка поддерживаемых).
Класс должен содержать необходимые конструкторы, а также «уметь» выводить себя на консоль.

1.5. Конвертер весов

Разработать класс Конвертер весов.
Класс должен хранить вес в килограммах и предоставлять методы по его преобразованию в другие единицы измерения (например, аптечный фунт, тройская унция, пуд, …).
Класс должен предоставлять операции: 1) установить текущий вес в килограммах, 2) узнать текущий вес в килограммах, 3) узнать текущий вес в выбранной единице измерения (из списка поддерживаемых).
Класс должен содержать необходимые конструкторы, а также «уметь» выводить себя на консоль.

1.6. Конвертер температур

Разработать класс Конвертер температур.
Класс должен хранить температуру в градусах Цельсия и предоставлять методы по его преобразованию в другие единицы измерения (Фаренгейт, Кельвин, Ранкин, …).
Класс должен предоставлять операции: 1) установить текущую температуру в градусах Цельсия, 2) узнать текущую температуру в градусах Цельсия, 3) узнать текущую температуру в выбранной единице измерения (из списка поддерживаемых).
Класс должен содержать необходимые конструкторы, а также «уметь» выводить себя на консоль.

2.1. Календарь событий

Разработать класс Календарь событий.
Класс должен позволять сохранять даты заданных событий в формате: год, месяц, день (в диапазоне от 1 января 1 года до 31 декабря 2020 года), наименование события. На каждый день может приходиться только одно событие. Общее число событий – не более 30.
Класс должен предоставлять операции: 1) установить событие, 2) узнать дату выбранного события, 3) вычислить разницу между заданной датой и датой события (в годах, месяцах, днях), 4) сформировать новое событие, сдвинув выбранное существующее событие на заданное смещение (в годах, месяцах, днях) в меньшую и в большую сторону.
Класс должен содержать все необходимые конструкторы, деструктор, оператор присваивания, а также «уметь» выводить себя на консоль.

2.2. Полином

Разработать класс Полином.
Класс должен хранить полином (многочлен) от одной переменной (х). Степень полинома n находится в диапазоне от 0 до 12.
Класс должен предоставлять следующие операции: 1) задать степень полинома, 2) задать коэффициенты мономов полинома, 3) узнать степень полинома, 4) узнать значение коэффициента по его номеру, 5) вычислить значение полинома в заданной точке х, 6) найти производную полинома.
Класс должен содержать все необходимые конструкторы, деструктор, оператор присваивания, а также «уметь» выводить себя на консоль.

3.1. Ряд Тейлора

Разработать класс Ряд Тейлора.
Класс должен формировать ряд Тейлора для выбранной функции из списка поддерживаемых с заданным числом членов ряда. Минимальный список функций: sin(x), cos(x), exp(x).
Класс должен содержать необходимые служебные методы (конструкторы, деструктор и пр.).
Класс должен предоставлять следующие операции: 1) задать текущую функцию, 2) узнать текущую функцию, 3) задать текущее число членов ряда, 4) узнать текущее число членов ряда, 5) выдать формулу ряда для выбранной функции, 6) выдать значение заданного члена ряда, 7) рассчитать значение ряда в выбранной точке x, 8) вывести отклонение значения ряда в выбранной точке от эталонного значения текущей функции в данной точке (эталонное значение вычисляется, используя соответствующую функцию из стандартной библиотеки C++).

3.2. Табулятор функции

Разработать класс Табулятор функции.
Класс должен позволять выполнять табулирование произвольной функции одной переменной, заданной в виде функции языка C++.
Класс должен содержать необходимые служебные методы (конструкторы, деструктор и пр.).
Класс должен предоставлять следующие операции: 1) задать текущую функцию, 2) задать текущее число точек табулирования, 3) узнать текущее число точек табулирования, 4) задать отрезок табулирования, 5) узнать отрезок табулирования, 6) выполнить табулирование функции, 7) выдать результаты табулирования, 8) сохранить результаты табулирования в файл.

3.3. Расчет интегралов

Разработать класс Расчет интегралов.
Класс должен позволять вычислять приближенное значение интеграла от произвольной функции одной переменной, заданной в виде функции языка C++. Интеграл необходимо вычислять в заданных пределах интегрирования, используя методы левых, правых и средних прямоугольников.
Класс должен содержать необходимые служебные методы (конструкторы, деструктор и пр.).
Класс должен предоставлять следующие операции: 1) задать текущую функцию, 2) задать пределы интегрирования, 3) узнать пределы интегрирования, 4) задать число отрезков метода прямоугольников, 5) выбрать метод вычисления, 6) вычислить значение интеграла выбранным методом, 7) вывести результат вычисления на экран.

3.4. Пользовательское меню

Разработать класс Пользовательское меню.
Класс должен предоставлять одноуровневое меню с заданным числом команд в консольном режиме экрана. 
Класс должен содержать необходимые служебные методы (конструкторы, деструктор и пр.).
Класс должен предоставлять следующие операции: 1) задать число команд меню, 2) узнать число команд меню, 3) задать название пункта меню с указанным номером, 4) вывести меню на экран в выбранной позиции окна консоли, 5) обеспечить выбор пользователем пункта меню с выдачей выбранного номера, 6) выдать номер последнего выбранного пользователем пункта меню.
3.5. Однострочный текстовый редактор
Разработать класс Однострочный текстовый редактор.
Класс должен предоставлять возможность разместить в выбранной позиции окна консоли поле заданной длины для ввода с клавиатуры последовательности символов. В минимальном варианте длина последовательности не должна превышать длину поля ввода.
Класс должен содержать необходимые служебные методы (конструкторы, деструктор и пр.).
Класс должен предоставлять следующие операции: 1) задать длину поля ввода, 2) узнать длину поля ввода, 3) задать позицию поля ввода в окне консоли, 4) узнать позицию поля ввода в окне консоли, 5) разместить однострочный текстовый редактор в окне консоли, 6) обеспечить ввод пользователем строки с длиной не больше длины поля ввода, 7) выдать введенную пользователем строку.

3.6. Словарь переводчика

Разработать класс Словарь переводчика.
Класс должен предоставлять возможность формировать англо-русский словарь. В минимальном варианте каждому английскому слову соответствует ровно одно русское слово-перевод.
Класс должен содержать необходимые служебные методы (конструкторы, деструктор и пр.).
Класс должен предоставлять следующие операции: 1) добавить в словарь слово и его перевод, 2) изменить перевод указанного слова, 3) узнать перевод выбранного слова, 4) проверить наличие слова в словаре, 5) узнать число слов в словаре, 6) сохранить словарь в файл, 7) считать словарь из файла.








